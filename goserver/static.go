//
// This file was generated via github.com/skx/implant/
//
// Local edits will be lost.
//
package main

import (
	"bytes"
	"compress/gzip"
	"encoding/hex"
	"errors"
	"io/ioutil"
)

//
// EmbeddedResource is the structure which is used to record details of
// each embedded resource in your binary.
//
// The resource contains the (original) filename, relative to the input
// directory `implant` was generated with, along with the original size
// and the compressed/encoded data.
//
type EmbeddedResource struct {
	Filename string
	Contents string
	Length   int
}

//
// RESOURCES is a simple array containing one entry for each embedded
// resource.
//
// It is exposed to callers via the `getResources()` function.
//
var RESOURCES []EmbeddedResource

//
// Populate our resources
//
func init() {

	var tmp EmbeddedResource

	tmp.Filename = "data/index.html"
	tmp.Contents = "1f8b08000000000004ffb4597d73db3693ff9f9f62cb2667b9a6f922598e63939a716cb9d19d63b9b2d2dad7e9341009894828920780b274997cf767160029ca71da4c9f79306d2c814bece2b7bf7d0114fe7039be983edc0e2195cb6c6085fa0f409852920c2c0080503299d1c1af4c5424833744b018cef6434f4f6b91259504e29470416564bf9f5e1d9ed8e0998722e6ac9420781cd9a994a538f5bcb848a8fbf1ff2aca376e5c2cbd8feae361cfedb981bb64b9fb51d8c07249179cc94d648b9474fbc787578bf262e6fdcf7fff925ddfccc7d5eb40925eb7f06edefdef3a938f93e2e417b9fcf46e929c5727910d312f8428385bb03cb2495ee49b6551097b107a4299b46b9fdc9434b2255d4bef2359116db53db0d40ec1f3e08ecaaa04ba26cb32a3424faf086f662082dfff38d3f3b5945b5622edc06760c929040e28d04ec1bee4e4118a15e519294b962f20663ccea8b01d40684ee143e0c364f8ceeaaa3f304d99006d123cb22c831905baa6712569028f4ca6407238f1fdf5b1ef035b9205b57aea4deb48fdd10b18ab20e1e4513ca7deb5fa4adc3af6e16a3c811144e0c3740c5ddff7e16e3abc85ae6fbdf2012e46938beb218c1c183930b24e7cb819de4f6164bdf6e1eefcd7a105c89d0f1a8d2fb0ff57b8749fe022580e0b4eca748b061838e09fe3013dbd35f83622040443e7a205141ec98aba161844c040b28e142027be6f0102717b3d9ec2da4184e00082be0f3fc1dde806d65ed03d819fe07664418dceda821a9e0f7f074aef092871911515a70908c959d9660a34e0fc3be834f0fc053eb3ac883f0928e6c61ae15ad0e083004d86efe03796c814658ca10d5f031f0e21087c0b10b8ebe1141e956804939b4b08105044aafd400b1c807ae9b5e6e4463be018e503df076073d8c04b23abf8fa7678033f8fefdebf4101df42a5a0f8dc765ed0f5a1f6dec682a0e783e6f0da82e0c8d79ff141df378c0e8e7d18de5c5a0106030667e06b5a626a00029ce449b154d8702bf03555adc0eff96a53dcecb4dbef5b817fa427173b937d3d39db993cf6e1627c3d9e007760e1c0cc0afc5748e5e9fbc98d8e2f4526fdd184f86ee2397ac2a576e2c958be4326bda3ff70a07d65402bcefa7db3dd6ebfeff88edf445e3b19e95c84b4c01854f0de0344e86f156e7aea01a7ba3e06e648859e9ebebf8708fabe8f8e34530f0f1029c943185941a0a6473743b8771e1cb8bf771e1e2ce4cb8dce7141b7b6d1777c47f9b3a7c9f9ac8dc826a3190d42a623a9f45463a3d27cac340fa72d1b9b0d36361ea08d274af2a98daf0d6f47166efb0e13f107f8b26f8a981acf32a4bf65c815cb732652b8cac8a295809f124355309952a8e5e7195938db145ae4983c5b395773b87be41c9f3841f7b84eacf0be6c3c8c7e4164b0e0f44d7e55718bde5169f708c3596d1d54e2bd771e8c63956b1e944bd5c77be5464c48e759912f94fbb0a4a10eb514667074db56434bb576594b093e33f9e1c14237d54a5e99eca0605600abf12ccac75b94df143ca11c2e8a5cf222fb1a678d2f8139cb329ac04c896337a061c48c89f1f1d5072cfbc89f1b4571acfead4458673293c72c440b330926299dad002e27e7bfc1b952f37e32bc8437e3c9e570a2b398ce79a67e9a44cf04d07549636c4464817d89a012580e375680f90cdfb1024c62e88be9f8160ee0cd783a1da3d257266a744ac737d0b75fbbc97f8d6c371e1f5981ffba0f8d7390143a7a5439a81d8351ac3e8fd0cd6a9b703dbc9ac2014c463fbf9d5a410fe31c9535518bf40a7a5818d4fc449793315ad6c3fa60744ed086de11da84584f500e1bafc38915f4fa38ad6d9d4cb0370a7a2aaa952d28f0aa1da368974ae41fbeec9f99307dd19957792c599177f6e1734d2acf8369b1586454455d4ab3f23061a2ccc8a69678d1b17fc4797bdf8d33167fda2e435beb4023f7a728494ced7d57aa753ba684e0a06ec9e98ae6f292ce4995c94eddc0016cedd45d71355b32a96c8a8b84b66c99177c69efbb42097ccb166ca051102278d1912913ed5cf5c2251fc9bad3408003dbf453b06fc77753dba9b5e1a878760ab6b73b9910494e95025750ce48c6fe9f76f677de13551c53214ea1011d5f6a61015b1fe8c1e6d0512bbb43ce0b0e5114816dc30ec67aa04724e10b2aed7d9748c93bb6e0b1edd8a8e294619fee2dd8fc6c46043d3e726c38d0eb4ea8a832b9c5bc1edbf5fea4a8dade77f1c4d651eadb60007c019a09fad474edfc674db29b267d3bbea96f2f2c077bb5b51a8503d80bbd72b0f7d48eb659ad2f48a346d15fd2cd448562db7959d23c69b22b669ca2e2f076faeeba5e6d5e70e820ad1846ef1930081b7937a3f942a667c00e0e76dc851bad5336ba4aa9e9ec85191b8404e28c0811d95941923f8d940d29a7f3c8fed10696443662619e88dfd91f2e4b100f5b61d49e57e73f7c147a64107a191bec6dbdfca5bdd3612e2aae63bd5e0008a7a0229bcc32acae7abce8d8ee8e69fbee8ce549674f89ee390daf7776ac104ab661a7e909364b76898072722d216accf89d25d8c8ffe1c64542eb9c85c3f354eec7a640d2b584ff025ee5c024b0e592268c489a6df0c46006628e4bd8fbee8a641db9de21fc8bce1ee685bd2681b4706a32257ec2d5424f9f8deb13bddc609adc3407fa58085b3f5396114ec9677d60380d7cffe5594d4cb65cc067536c4f2128d7208a8c2530cb48fca99192083fd40b603ff7f20c4a92242c5f9c42bf5c6f2513f80c2bca258b49764832b6c84f4116e5990e84d05396a265a157dfb884b322d9e0145ebd284d66e9c80efc7a17104a3e08259efd139946f689ffb27904102272b0a4322d9248a74ac552965c614e869c2c69d47c23aad444b6d75a0115d0b502ca482b4fa955f4275e3c8ac8eef9369e77045a600f2c7378a87b89db8c124181e69272d860a0be39bf1b5d404a3975a0e09acc18c4c85f6c5db04728728ac747a491d0772d30e7c5524d70b648e5e192e6958bbd0d3617fa7c0e707efddbf9c31d607a50aa4a5e2c38599adb11d8c366780f8424922e692eb109426d8f298b537d461569f188efe2ff5cdfa2b878d9815a90657a845e8d8c76921e21cbcb4aaaea14d9bae469b454418615c92a1ad96f87d7b7f6e09bb2f57b467af2fe062ec697c31f9abb341ca187dead75879e34f774e8b2860fdd5d3ea4ddc19d8632f4d26efd2e405865caa57586693120f4aaac16544a424ff266c2b02f2e3251923cb2bbed3713b652abe2d64d8f018ae8916d3a96d3bcc8e959eb1dbc710c066f6956865e1ad46a7084e56094cb42797fce68960099152b8a3e8298e4865cc430cb38dd69bb75e7aa2ca5b97a35353d4b886c1e344887ea667200b34aca2277b1a0b55d5f0ea629ad9568d2a4644581a8160289fcf41aeea9259cca8ae77869879630097386a72d2a9ed355c0927c525be58dd2aa4c88d47541f50f6a37084425f4ecbcc8b2e211ef14ebc42f4e9fee23695cab4798c8c185bed15b3bb07180875e62b2693dc22419e0ee35625aba86abd60409c79b4562ae33318c394958256002a46e120b9eb09c482a60ed6c5c80aba2b94355868625a783a0bef4c0530ede0274fdfaceb1ef3bea3fcc1718d4a1872fe016432f6982410fb5b1315e9e1007660ec4cfefeb8ed6c6650537dc6102214d543f81b908b7b683aa0b807810bea830a1e8f26c4f68623b60ffcc29cd6d07489e80fd26aba80d9c0a3c27b115964180bb02f9a21c4c6081e287b1ba04561e7d2caa2cd1e4fe47a0e8ed03fc1d38ea06611d38b0091c58771dd8749f87c8705f7b1fdffaa6eff1460966543e529a2be4e4630165c1722900116073469367fddeb81ed78723df39f61d38f19da0eba3ffbfc7d9ea8c881cfe8e5da0ec57bb10143d0982e578d42ad99a6635751be3216e48ec7e377b511b7217fa8ab9ea6be0fb0efe83b50c77f7b7ee42a1efd8991653a96d1b9b82aca8407299da0687f0505410ce06cb4ac8d09b0d54f12459a6854c2ec50b5cfc7dc1b8bebd74534c55f27a1a7da1b79b66b65508eed4ef2f4f8a1160aec788da6630aa7f6c51b1f7ec0f169861e88af24396c79c12f49ac938266a06e1ed6488d964e79cdfc51bdcfae70c3ceeeb74a67ecbc0233b9ef5f164cf5b17b178dcc7b9f68d2d9ef5716ed692c3c3be4e39f57dedf6c07fa22f8b420f8dc28cd51497d04bd8aaf5156ba8a999d86ed4bd63ac7aa9279513bb565570cdb94effd4b6d33400a815f1a8a285ccf9119db6a3b76d862afbc6c26df50f3dd595e283d09b15c96660855e2a97d9c0fa57000000ffff14adbdcc4f1c0000"
	tmp.Length = 7247
	RESOURCES = append(RESOURCES, tmp)

}

//
// Return the contents of a resource.
//
func getResource(path string) ([]byte, error) {
	for _, entry := range RESOURCES {
		//
		// We found the file contents.
		//
		if entry.Filename == path {
			var raw bytes.Buffer
			var err error

			// Decode the data.
			in, err := hex.DecodeString(entry.Contents)
			if err != nil {
				return nil, err
			}

			// Gunzip the data to the client
			gr, err := gzip.NewReader(bytes.NewBuffer(in))
			if err != nil {
				return nil, err
			}
			defer gr.Close()
			data, err := ioutil.ReadAll(gr)
			if err != nil {
				return nil, err
			}
			_, err = raw.Write(data)
			if err != nil {
				return nil, err
			}

			// Return it.
			return raw.Bytes(), nil
		}
	}
	return nil, errors.New("Failed to find resource")
}

//
// Return the available resources.
//
func getResources() []EmbeddedResource {
	return RESOURCES
}
