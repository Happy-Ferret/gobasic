//
// This file was generated via github.com/skx/implant/
//
// Local edits will be lost.
//
package main

import (
	"bytes"
	"compress/gzip"
	"encoding/hex"
	"errors"
	"io/ioutil"
)

//
// EmbeddedResource is the structure which is used to record details of
// each embedded resource in your binary.
//
// The resource contains the (original) filename, relative to the input
// directory `implant` was generated with, along with the original size
// and the compressed/encoded data.
//
type EmbeddedResource struct {
	Filename string
	Contents string
	Length   int
}

//
// RESOURCES is a simple array containing one entry for each embedded
// resource.
//
// It is exposed to callers via the `getResources()` function.
//
var RESOURCES []EmbeddedResource

//
// Populate our resources
//
func init() {

	var tmp EmbeddedResource

	tmp.Filename = "data/index.html"
	tmp.Contents = "1f8b08000000000004ffb4596173db3892fdce5ff1969b9ce5352d92b2e53836a52ac79627ba732cafaccc243735358148484242913c00b4a54be5bf5f35405292e3cc4cedd5a292b20436d18dd7dd0f8d56f4b7abd1e5e4e3dd000bbd4cfb4e64ff00d182b3a4ef0040a4854e79ff67a14a96e20d5322c6f97ee4db692bb2e49a215e30a9b8eeb9ef27d787a72efceaa18aa52834948c7bee42eb429df97e9c27bcfdf97f4a2ed7ed385ffa9fcdc7c3a3f6513b6c2f45d6feac5c884cf3b9147add73d58275ba2787d7f3e272eaffd77ffe33bdb99d8dcad7a166479ddcbf7df7dfab543f8ef3d37feae59777e3e4a23cedb98865ae542ec55c643d976579b65ee6a572fb91af8c49bbf6e975c17baee62bed7f660fcc5aedf61db343f83eeeb92e0bf0155b16295776fa81c966063dfcfadbb99dafa5da45a9162d7c8548ce107a30a09dc1bd92ec11f90397292b0a91cd110b19a75cb91e089a337c0a038c07ef9c8ef983c942285893f028d214530ebee271a9798247a11760194e8360751204104b36e7ce9179d339367fec02955548247b54cfa96f3b5d23ee9c04b81e8d31440f012623748220c0fd6470874ee0bc0a80cbe1f8f26680a187a187a1731ae076f06182a1f33ac0fdc5cf0307143b9f2c1adfb0ff47b8749ee0a24486b964c56283062a38f0afe38123bb35fc18110625c8b96401c7237be06d071522a82059f50c20a741e08080b8bb194db0f208211c20ec06f807ee87b758f961e714ffc0ddd0418dceca410dcfa73f03e5e80928719ee6a5e4099496a2d88e1434e0fc7fd069e0f9037ca6691e7f51c8679535aaeda0c187001a0fdee11791e805c9548636f11a06384418060e08b89bc1048f46b487f1ed1542029490da7e60050e605e7a6d63726d1d7042f26110006286355e56b2265edf0e6ef1d3e8fefd1b12081c520a13cfdbce0b3b016aefad1d8447016c0caf1c84c781fd4c0fba4115d1e14980c1ed95135232507286810d4ba20630489625f9d260239d30b0a1ea84c151603625ab9d76ba5d270c8eede47c67b26b27a73b9327012e4737a331a487b987a91306af289427efc7b736bf4c30d98f558aef12cff19358da269e54643bc16477f46f4eb4ef0cd8cd33bbdd4eb7eb5164d05f9b6c4f29c9321205c76900e066783b208fd7c938f4d00daa6f8743937bb796a4286eac92a05161dc12da18dbe6bd46890998274a0e31c49696030c1d0aa45acd71153a9ff06dbf3a48cc78d64bdd8d97ae459609b5c075cae65b24f8d439e614d10b8e5a7e96b2b9b7a1b13c2302dbe23dbbe7ceb17772ea859d939adcf0be68f8ed037a86c588f4bb16769b3b1f6d6e8d704c2965008721bf0fde47836d953e1f0dba06810f0e014aa47091e6d9dc20483e241d0d8b125e1b0d946d956a428f46a3849e6d949c5429fac1095f6dc34cafd8f12cca271b94dfe432e1129779a6659e7e8fb3c5976126d29427981a713a912d8c756c7ef7818e5e62b15bf4d00de804de22a39a4d2a2e71082dca66220acb18c0d5f8e2175c1835efc7832bbc198daf0663cb249677aa33ac225ba1c057058fa918d039d5068a6b880cb74e489c42ef38211109f96232bac301de8c269311297d5585bca5557a837cfbbd9b82d794639533864e18bceea289000a0a4a067278cda3e4fdb07292490bb34ddc0cae2738c078f8d3db89131e851535372947e1151e11391b23c675d8dd3ae1117174a5734c361c1d934d84f598e4a8f8391c3be15197a6adade331d527e1d1094d99a82481578d5da6b2195b32fdf46dffbc4ad317ad5999c55ae4596b1f5feba0f27d4cf2f93ce526eb163c2d0e13a18a94ad6b89172df7ef34efeeb7e354c45f36cbf0ad75d0c8fdae0a167377bfadcdbaad8ac669f07621f903cff4159fb132d5adba88023676dacab49c2e853636c579c2b76c99e572e9eeb79511f8912d54c492207a78d1d20ba1b6b9ea459b7d66ab5603010d2a95cfe0de8dee27ae576ba351caf40caebf3b9930cdce8c82b6e252b054fc2f6fedefbca7ca38e64a9da1019d5edac2021b1fd82166689995db032973895eaf07d7c50ec6769047349373aeddfd36d35ab65c2563d77349c599a05ad99f8bd9f994297e72ecb938b0eb8eb92a53bdc1bc1e9bf57ee7a4dadd6fd3ada965d46f83017c034f157f6aba75feb326b94da1bc193fd4b71715fdbdda5a8bc201f622bfe8ef3db563dbacad2f14468da23f0cb72a2b4cb45d1405cf92865d8971f252e2ede4dd4dbdda2c9768515809cade7308448d7c3be5d95c2fce210e0e76dc451bad299b5c65d4b4f6a254f4238638654af5dc3467c9ef95948b85e4b39efb771722e9b98445f544fd2a7e6b8b84f0700d46dbf3e60e468f229ff5233f15fdbd8d97bf6def7490a952da5caf1700931c26b3d934a5d3d58e172db7bd63da7e7b2ab2a4b56744f7bc26ae77766c104a366967c313ae48760381e4f44aa3d798f1ab48a898fead1de709af398b86ef1beea7a240f395c67f4096198486582e792298e6e99aaaf66a10e6b484bbdf7e60694baf7602fe456b8f7861af21902d9c1aa6a44fb45ae4dbfb697dabd66ba2c97573a98e9572ed336319939c7db545fb5918042fcfebc014cb39be5687ed19c2620595a722c13465f197464a13fca817a0aaefe5390a9624229b9fa15bac369209bee2814b2d62961eb254ccb333e8bc38b78910f9c652b22cf2ebae4734cd93354d51fbc368aa96eeb96150ef029196fd48d3fd3bd18b9e7b1abc6c1e0111218725d78b3ce959aa34512a926be264646cc97bcd37668e9a9eeb6fad400af8ca0055491b4f9955ec27993faa9e7b14b874e7506481db77aa02beae25ee52ce1407cf34975853a2beb9b81f5e62c125f7904b1bcc94c414bf54ba508d90679cae701446caf63b3093f9d24c48315fe8c325cfca36d536545cd83b327071f3cbc5c77b103d185585cce7922dab0e05f6ee2f7e1eec4169a6f992679a8a20d2f6b810f1c2de13d5227fa477e9bfb49d8c36351c480b45991d915f23639d644724b2a2d4e674eab9f6c8b3689903190f2c2d79cf7d3bb8b973fb3f94addfaba4c7ef6f7139ba1afcade967d1887cf26ead3bf275d52b239735f1d0d98d8745a77f6fa18cfc45a77e1788cad4b8b46698ad0888fc32ad058d92c8d7b299a8a22fce5355b0ace776b6df4cc4835995b65ed5183081de73ab8ae52ccb337ebef50e75fdc2fe5b9e1691bf086b3534a2a23fcc746ebc3f133c4dc0a6f903271f216659155cac8aaccae9deb65b77da550b9e99571755cd125134f71ba423d31dec635a6a9d676d3ad0b65d5ff4270b5e2bb141b3600f1ccc941014c84f5b614f2d915c9732a3c61959223466826e5b5c3da72bc7927d315b958dd2b24898b6e782a91fcc6e088852d9d9599ea6f923f5f56ae257674ff79134aeb5234a74ffd276d5561ed61e64e427159bd6234a923eedde2266a56bb86a4d482475f758d552a434962c11a5c218ac2e127399888c69aeb0f2d66de03a6ffa98c6d0a890bc1fd68d077303f702e214ab13ddc033ff882f28a9239f5ea02d467ed224831d6663236a60300f530ff1f3fbbae7b571692eabd8118a204d4c3d415c445bdb41b50d101e4cce4b22147b3cbb639eb81edc9f24e799eb816509dc3769c95d48aee89e241ee81804ee738a17e3608639891fc6a6116b3cfa9897696283fb5f02c56e1ff833704cdf62157a58871e561d0febcef31055b16fbd4f6ffdd0f7d4d5c194eb47ce33839c7ecc51e422d30a848098099e3cebf7c6f5b43e8e03ef24f0701a7861c7f8ffaf38dbdc112986ffc22e48f6bb5d284e9e8412195db50ab1e2691dba8df1889b206effe5e8256d14bb742d3f0aecd7905a44d47dac9a357fea2e0bc173a9b9e31f2b66a86d939b8a3d7045c1559d6d38c4c7bc4434ed2f4ba5237fda3787274b532b5471293551a9c75fb97e7be9e63035e4f534fb227f976636a710eecd6f204f0e2310d753466d188cdb1f3c4cee3dfba301310c7fe0f25064b1e48cbc56314e9535fde86e3c2036a1a64273cfef5017b5fe4981aefb15b5d43f29d05d9f6ef672ab194ad77d9adbee9ad25d9fe6a65b7274d9b79453f74c3717fe53db2c8a7c328a18ab395c223f110f5b5fe90cadce4c2a37eada3136b5d4939393aa5673e056f73afb73d74ed1009815e9aa6285aafb23396d47efb619e6d8af2cdc9cfe916faa527a10f9d33c59f79dc85fe865da77fe2f0000ffff6c9e387bd31b0000"
	tmp.Length = 7123
	RESOURCES = append(RESOURCES, tmp)

}

//
// Return the contents of a resource.
//
func getResource(path string) ([]byte, error) {
	for _, entry := range RESOURCES {
		//
		// We found the file contents.
		//
		if entry.Filename == path {
			var raw bytes.Buffer
			var err error

			// Decode the data.
			in, err := hex.DecodeString(entry.Contents)
			if err != nil {
				return nil, err
			}

			// Gunzip the data to the client
			gr, err := gzip.NewReader(bytes.NewBuffer(in))
			if err != nil {
				return nil, err
			}
			defer gr.Close()
			data, err := ioutil.ReadAll(gr)
			if err != nil {
				return nil, err
			}
			_, err = raw.Write(data)
			if err != nil {
				return nil, err
			}

			// Return it.
			return raw.Bytes(), nil
		}
	}
	return nil, errors.New("Failed to find resource")
}

//
// Return the available resources.
//
func getResources() []EmbeddedResource {
	return RESOURCES
}
